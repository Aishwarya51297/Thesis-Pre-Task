{"ast":null,"code":"var _jsxFileName = \"F:\\\\Germany\\\\Thesis\\\\Pre-Task\\\\frontend\\\\src\\\\Statistics.js\";\nimport React, { useState, useEffect } from 'react';\nimport BarChart from './BarChart';\nimport './index.css';\nfunction Statistics({\n  stats,\n  filter,\n  onBarClick\n}) {\n  const [images, setImages] = useState([]);\n  const [filteredImages, setFilteredImages] = useState([]);\n\n  // Fetch all images\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/images').then(response => response.json()).then(data => {\n      setImages(data); // Store all images\n      setFilteredImages(data); // Initially, show all images\n    });\n  }, []);\n\n  // Apply the filter whenever it changes\n  useEffect(() => {\n    if (!filter) {\n      setFilteredImages(images); // No filter applied, show all images\n      return;\n    }\n    let filtered = images;\n\n    // Gender filter\n    if (filter.category === 'gender') {\n      if (filter.value === 'male') {\n        filtered = images.filter(img => stats.gender.male_ids.includes(parseInt(img.split('.')[0])));\n      } else if (filter.value === 'female') {\n        filtered = images.filter(img => stats.gender.female_ids.includes(parseInt(img.split('.')[0])));\n      }\n    }\n\n    // Age filter\n    if (filter.category === 'age') {\n      if (filter.value === 'young') {\n        filtered = images.filter(img => stats.age.young_ids.includes(parseInt(img.split('.')[0])));\n      } else if (filter.value === 'middle age') {\n        filtered = images.filter(img => stats.age.middle_ids.includes(parseInt(img.split('.')[0])));\n      } else if (filter.value === 'old') {\n        filtered = images.filter(img => stats.age.old_ids.includes(parseInt(img.split('.')[0])));\n      }\n    }\n\n    // Orientation filter\n    if (filter.category === 'orientation') {\n      if (filter.value === 'camera_facing') {\n        filtered = images.filter(img => stats.orientation.facing_ids.includes(parseInt(img.split('.')[0])));\n      } else if (filter.value === 'away_facing') {\n        filtered = images.filter(img => stats.orientation.away_ids.includes(parseInt(img.split('.')[0])));\n      }\n    }\n    setFilteredImages(filtered);\n  }, [filter, images, stats]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Statistics - Bar Charts\"), stats && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: Object.entries(stats.gender).filter(([key]) => !key.endsWith('_ids')),\n    title: \"Gender Distribution\",\n    onBarClick: onBarClick,\n    filter: filter,\n    category: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    data: Object.entries(stats.age).filter(([key]) => !key.endsWith('_ids')),\n    title: \"Age Distribution\",\n    onBarClick: onBarClick,\n    filter: filter,\n    category: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    data: Object.entries(stats.orientation).filter(([key]) => !key.endsWith('_ids')),\n    title: \"Orientation Distribution\",\n    onBarClick: onBarClick,\n    filter: filter,\n    category: \"orientation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, filteredImages.length > 0 ? filteredImages.map((image, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: `http://127.0.0.1:5000/images/${image}`,\n    alt: image,\n    className: \"grid-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"No images found for this filter.\")));\n}\nexport default Statistics;","map":{"version":3,"names":["React","useState","useEffect","BarChart","Statistics","stats","filter","onBarClick","images","setImages","filteredImages","setFilteredImages","fetch","then","response","json","data","filtered","category","value","img","gender","male_ids","includes","parseInt","split","female_ids","age","young_ids","middle_ids","old_ids","orientation","facing_ids","away_ids","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","key","endsWith","title","length","map","image","index","src","alt"],"sources":["F:/Germany/Thesis/Pre-Task/frontend/src/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BarChart from './BarChart';\r\nimport './index.css';\r\n\r\nfunction Statistics({ stats, filter, onBarClick }) {\r\n  const [images, setImages] = useState([]);\r\n  const [filteredImages, setFilteredImages] = useState([]);\r\n\r\n  // Fetch all images\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:5000/images')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setImages(data); // Store all images\r\n        setFilteredImages(data); // Initially, show all images\r\n      });\r\n  }, []);\r\n\r\n  // Apply the filter whenever it changes\r\n  useEffect(() => {\r\n    if (!filter) {\r\n      setFilteredImages(images); // No filter applied, show all images\r\n      return;\r\n    }\r\n\r\n    let filtered = images;\r\n\r\n    // Gender filter\r\n    if (filter.category === 'gender') {\r\n      if (filter.value === 'male') {\r\n        filtered = images.filter((img) => stats.gender.male_ids.includes(parseInt(img.split('.')[0])));\r\n      } else if (filter.value === 'female') {\r\n        filtered = images.filter((img) => stats.gender.female_ids.includes(parseInt(img.split('.')[0])));\r\n      }\r\n    }\r\n\r\n    // Age filter\r\n    if (filter.category === 'age') {\r\n      if (filter.value === 'young') {\r\n        filtered = images.filter((img) => stats.age.young_ids.includes(parseInt(img.split('.')[0])));\r\n      } else if (filter.value === 'middle age') {\r\n        filtered = images.filter((img) => stats.age.middle_ids.includes(parseInt(img.split('.')[0])));\r\n      } else if (filter.value === 'old') {\r\n        filtered = images.filter((img) => stats.age.old_ids.includes(parseInt(img.split('.')[0])));\r\n      }\r\n    }\r\n\r\n    // Orientation filter\r\n    if (filter.category === 'orientation') {\r\n      if (filter.value === 'camera_facing') {\r\n        filtered = images.filter((img) => stats.orientation.facing_ids.includes(parseInt(img.split('.')[0])));\r\n      } else if (filter.value === 'away_facing') {\r\n        filtered = images.filter((img) => stats.orientation.away_ids.includes(parseInt(img.split('.')[0])));\r\n      }\r\n    }\r\n\r\n    setFilteredImages(filtered);\r\n  }, [filter, images, stats]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Statistics - Bar Charts</h2>\r\n\r\n      {/* Render the bar charts */}\r\n      {stats && (\r\n        <div className=\"chart-container\">\r\n          <BarChart\r\n            data={Object.entries(stats.gender).filter(([key]) => !key.endsWith('_ids'))}\r\n            title=\"Gender Distribution\"\r\n            onBarClick={onBarClick}\r\n            filter={filter}\r\n            category=\"gender\"\r\n          />\r\n          <BarChart\r\n            data={Object.entries(stats.age).filter(([key]) => !key.endsWith('_ids'))}\r\n            title=\"Age Distribution\"\r\n            onBarClick={onBarClick}\r\n            filter={filter}\r\n            category=\"age\"\r\n          />\r\n          <BarChart\r\n            data={Object.entries(stats.orientation).filter(([key]) => !key.endsWith('_ids'))}\r\n            title=\"Orientation Distribution\"\r\n            onBarClick={onBarClick}\r\n            filter={filter}\r\n            category=\"orientation\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Display the filtered images */}\r\n      <div className=\"grid-container\">\r\n        {filteredImages.length > 0 ? (\r\n          filteredImages.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={`http://127.0.0.1:5000/images/${image}`}\r\n              alt={image}\r\n              className=\"grid-item\"\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No images found for this filter.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}