{"ast":null,"code":"var _jsxFileName = \"F:\\\\Germany\\\\Thesis\\\\Pre-Task\\\\Pre-Task\\\\frontend\\\\src\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nfunction Home({\n  filter\n}) {\n  const [images, setImages] = useState([]);\n  const [filteredImages, setFilteredImages] = useState([]);\n  const [descriptions, setDescriptions] = useState({});\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/images').then(response => response.json()).then(data => {\n      setImages(data);\n      setFilteredImages(data); // Initially, no filter applied\n    });\n  }, []);\n  useEffect(() => {\n    if (!filter) {\n      setFilteredImages(images);\n      return;\n    }\n    let filtered = images;\n    if (filter.category === 'gender') {\n      filtered = images.filter(img => img.filename.includes(filter.value));\n    }\n    if (filter.category === 'age') {\n      filtered = images.filter(img => img.filename.includes(filter.value));\n    }\n    if (filter.category === 'orientation') {\n      filtered = images.filter(img => img.filename.includes(filter.value));\n    }\n    setFilteredImages(filtered);\n  }, [filter, images]);\n  const fetchDescription = async imageId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/describe-image/${imageId}`, {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setDescriptions(prev => ({\n        ...prev,\n        [imageId]: data.description\n      }));\n    } catch (error) {\n      console.error('Error fetching description:', error);\n    }\n  };\n  const handleImageClick = (imageId, index) => {\n    console.log(`Image ${imageId} clicked`); // For debugging\n\n    const imgElement = document.getElementById(`image-${index}`);\n    if (imgElement) {\n      imgElement.classList.toggle('highlight');\n    }\n    if (!descriptions[imageId]) {\n      fetchDescription(imageId);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, filteredImages.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"image-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: `image-${index + 1}`,\n    src: `http://127.0.0.1:5000/static/images/${image}`,\n    alt: image.filename,\n    className: \"grid-item\",\n    onClick: () => handleImageClick(image, index + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, descriptions[image] ? descriptions[image] : 'Click to get description')))));\n}\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","Home","filter","images","setImages","filteredImages","setFilteredImages","descriptions","setDescriptions","fetch","then","response","json","data","filtered","category","img","filename","includes","value","fetchDescription","imageId","method","prev","description","error","console","handleImageClick","index","log","imgElement","document","getElementById","classList","toggle","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","image","key","id","src","alt","onClick"],"sources":["F:/Germany/Thesis/Pre-Task/Pre-Task/frontend/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\n\r\nfunction Home({ filter }) {\r\n  const [images, setImages] = useState([]);\r\n  const [filteredImages, setFilteredImages] = useState([]);\r\n  const [descriptions, setDescriptions] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:5000/images')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setImages(data);\r\n        setFilteredImages(data); // Initially, no filter applied\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!filter) {\r\n      setFilteredImages(images);\r\n      return;\r\n    }\r\n\r\n    let filtered = images;\r\n\r\n    if (filter.category === 'gender') {\r\n      filtered = images.filter((img) => img.filename.includes(filter.value));\r\n    }\r\n\r\n    if (filter.category === 'age') {\r\n      filtered = images.filter((img) => img.filename.includes(filter.value));\r\n    }\r\n\r\n    if (filter.category === 'orientation') {\r\n      filtered = images.filter((img) => img.filename.includes(filter.value));\r\n    }\r\n\r\n    setFilteredImages(filtered);\r\n  }, [filter, images]);\r\n\r\n  const fetchDescription = async (imageId) => {\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/describe-image/${imageId}`, {\r\n        method: 'POST',\r\n      });\r\n      const data = await response.json();\r\n      setDescriptions((prev) => ({ ...prev, [imageId]: data.description }));\r\n    } catch (error) {\r\n      console.error('Error fetching description:', error);\r\n    }\r\n  };\r\n\r\n  const handleImageClick = (imageId,index) => {\r\n    console.log(`Image ${imageId} clicked`); // For debugging\r\n    \r\n    const imgElement = document.getElementById(`image-${index}`);\r\n    if (imgElement) {\r\n      imgElement.classList.toggle('highlight');\r\n    }\r\n\r\n    if (!descriptions[imageId]) {\r\n      fetchDescription(imageId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid-container\">\r\n        {filteredImages.map((image, index) => (\r\n          <div key={index} className=\"image-item\">\r\n            <img\r\n              id={`image-${index + 1}`}\r\n              src={`http://127.0.0.1:5000/static/images/${image}`}\r\n              alt={image.filename}\r\n              className=\"grid-item\"\r\n              onClick={() => handleImageClick(image,index+1)}\r\n            />\r\n            <p>\r\n              {descriptions[image]\r\n                ? descriptions[image]\r\n                : 'Click to get description'}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}