{"ast":null,"code":"var _jsxFileName = \"F:\\\\Germany\\\\Thesis\\\\Pre-Task\\\\frontend\\\\src\\\\Statistics.js\";\nimport React, { useState, useEffect } from 'react';\nimport BarChart from './BarChart';\nimport './index.css';\nfunction Statistics({\n  stats,\n  filter,\n  onBarClick\n}) {\n  const [filteredImages, setFilteredImages] = useState([]);\n\n  // Fetch images based on the filter\n  useEffect(() => {\n    if (!filter) {\n      setFilteredImages([]); // No filter, show nothing or all images\n      return;\n    }\n\n    // Filter images based on gender, age, or orientation\n    fetch('http://127.0.0.1:5000/images').then(response => response.json()).then(data => {\n      let filtered = data;\n      if (filter.category === 'gender') {\n        if (filter.value === 'male') {\n          filtered = data.filter(img => img.includes('male'));\n        } else if (filter.value === 'female') {\n          filtered = data.filter(img => img.includes('female'));\n        }\n      }\n      if (filter.category === 'age') {\n        if (filter.value === 'young') {\n          filtered = data.filter(img => img.includes('young'));\n        } else if (filter.value === 'middle age') {\n          filtered = data.filter(img => img.includes('middle'));\n        } else if (filter.value === 'old') {\n          filtered = data.filter(img => img.includes('old'));\n        }\n      }\n      if (filter.category === 'orientation') {\n        if (filter.value === 'camera_facing') {\n          filtered = data.filter(img => img.includes('camera_facing'));\n        } else if (filter.value === 'away_facing') {\n          filtered = data.filter(img => img.includes('away_facing'));\n        }\n      }\n      setFilteredImages(filtered);\n    });\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Statistics - Bar Charts\"), stats && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: Object.entries(stats.gender).filter(([key]) => !key.endsWith('_ids')),\n    title: \"Gender Distribution\",\n    onBarClick: onBarClick,\n    filter: filter,\n    category: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    data: Object.entries(stats.age).filter(([key]) => !key.endsWith('_ids')),\n    title: \"Age Distribution\",\n    onBarClick: onBarClick,\n    filter: filter,\n    category: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    data: Object.entries(stats.orientation).filter(([key]) => !key.endsWith('_ids')),\n    title: \"Orientation Distribution\",\n    onBarClick: onBarClick,\n    filter: filter,\n    category: \"orientation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, filteredImages.length > 0 ? filteredImages.map((image, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: `http://127.0.0.1:5000/images/${image}`,\n    alt: image,\n    className: \"grid-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"No images found for this filter.\")));\n}\nexport default Statistics;","map":{"version":3,"names":["React","useState","useEffect","BarChart","Statistics","stats","filter","onBarClick","filteredImages","setFilteredImages","fetch","then","response","json","data","filtered","category","value","img","includes","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","gender","key","endsWith","title","age","orientation","length","map","image","index","src","alt"],"sources":["F:/Germany/Thesis/Pre-Task/frontend/src/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BarChart from './BarChart';\r\nimport './index.css';\r\n\r\nfunction Statistics({ stats, filter, onBarClick }) {\r\n  const [filteredImages, setFilteredImages] = useState([]);\r\n\r\n  // Fetch images based on the filter\r\n  useEffect(() => {\r\n    if (!filter) {\r\n      setFilteredImages([]); // No filter, show nothing or all images\r\n      return;\r\n    }\r\n\r\n    // Filter images based on gender, age, or orientation\r\n    fetch('http://127.0.0.1:5000/images')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let filtered = data;\r\n\r\n        if (filter.category === 'gender') {\r\n          if (filter.value === 'male') {\r\n            filtered = data.filter((img) => img.includes('male'));\r\n          } else if (filter.value === 'female') {\r\n            filtered = data.filter((img) => img.includes('female'));\r\n          }\r\n        }\r\n\r\n        if (filter.category === 'age') {\r\n          if (filter.value === 'young') {\r\n            filtered = data.filter((img) => img.includes('young'));\r\n          } else if (filter.value === 'middle age') {\r\n            filtered = data.filter((img) => img.includes('middle'));\r\n          } else if (filter.value === 'old') {\r\n            filtered = data.filter((img) => img.includes('old'));\r\n          }\r\n        }\r\n\r\n        if (filter.category === 'orientation') {\r\n          if (filter.value === 'camera_facing') {\r\n            filtered = data.filter((img) => img.includes('camera_facing'));\r\n          } else if (filter.value === 'away_facing') {\r\n            filtered = data.filter((img) => img.includes('away_facing'));\r\n          }\r\n        }\r\n\r\n        setFilteredImages(filtered);\r\n      });\r\n  }, [filter]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Statistics - Bar Charts</h2>\r\n\r\n      {/* Bar chart */}\r\n      {stats && (\r\n        <div className=\"chart-container\">\r\n          <BarChart\r\n            data={Object.entries(stats.gender).filter(([key]) => !key.endsWith('_ids'))}\r\n            title=\"Gender Distribution\"\r\n            onBarClick={onBarClick}\r\n            filter={filter}\r\n            category=\"gender\"\r\n          />\r\n          <BarChart\r\n            data={Object.entries(stats.age).filter(([key]) => !key.endsWith('_ids'))}\r\n            title=\"Age Distribution\"\r\n            onBarClick={onBarClick}\r\n            filter={filter}\r\n            category=\"age\"\r\n          />\r\n          <BarChart\r\n            data={Object.entries(stats.orientation).filter(([key]) => !key.endsWith('_ids'))}\r\n            title=\"Orientation Distribution\"\r\n            onBarClick={onBarClick}\r\n            filter={filter}\r\n            category=\"orientation\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Display filtered images */}\r\n      <div className=\"grid-container\">\r\n        {filteredImages.length > 0 ? (\r\n          filteredImages.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={`http://127.0.0.1:5000/images/${image}`}\r\n              alt={image}\r\n              className=\"grid-item\"\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No images found for this filter.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}